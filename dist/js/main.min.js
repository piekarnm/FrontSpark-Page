function _regenerator(){var y,e="function"==typeof Symbol?Symbol:{},t=e.iterator||"@@iterator",n=e.toStringTag||"@@toStringTag";function r(e,t,n,r){var o,a,c,i,s,l,u,d,f,t=t&&t.prototype instanceof p?t:p,t=Object.create(t.prototype);return _regeneratorDefine2(t,"_invoke",(o=e,a=n,u=r||[],d=!1,f={p:l=0,n:0,v:y,a:v,f:v.bind(y,4),d:function(e,t){return c=e,i=0,s=y,f.n=t,m}},function(e,t,n){if(1<l)throw TypeError("Generator is already running");for(d&&1===t&&v(t,n),i=t,s=n;(g=i<2?y:s)||!d;){c||(i?i<3?(1<i&&(f.n=-1),v(i,s)):f.n=s:f.v=s);try{if(l=2,c){if(g=c[e=i?e:"next"]){if(!(g=g.call(c,s)))throw TypeError("iterator result is not an object");if(!g.done)return g;s=g.value,i<2&&(i=0)}else 1===i&&(g=c.return)&&g.call(c),i<2&&(s=TypeError("The iterator does not provide a '"+e+"' method"),i=1);c=y}else if((g=(d=f.n<0)?s:o.call(a,f))!==m)break}catch(e){c=y,i=1,s=e}finally{l=1}}return{value:g,done:d}}),!0),t;function v(e,t){for(i=e,s=t,g=0;!d&&l&&!n&&g<u.length;g++){var n,r=u[g],o=f.p,a=r[2];3<e?(n=a===t)&&(s=r[(i=r[4])?5:i=3],r[4]=r[5]=y):r[0]<=o&&((n=e<2&&o<r[1])?(i=0,f.v=t,f.n=r[1]):o<a&&(n=e<3||r[0]>t||a<t)&&(r[4]=e,r[5]=t,f.n=a,i=0))}if(n||1<e)return m;throw d=!0,t}}var m={};function p(){}function o(){}function a(){}var g=Object.getPrototypeOf,e=[][t]?g(g([][t]())):(_regeneratorDefine2(g={},t,function(){return this}),g),c=a.prototype=p.prototype=Object.create(e);function i(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,a):(e.__proto__=a,_regeneratorDefine2(e,n,"GeneratorFunction")),e.prototype=Object.create(c),e}return _regeneratorDefine2(c,"constructor",o.prototype=a),_regeneratorDefine2(a,"constructor",o),_regeneratorDefine2(a,n,o.displayName="GeneratorFunction"),_regeneratorDefine2(c),_regeneratorDefine2(c,n,"Generator"),_regeneratorDefine2(c,t,function(){return this}),_regeneratorDefine2(c,"toString",function(){return"[object Generator]"}),(_regenerator=function(){return{w:r,m:i}})()}function _regeneratorDefine2(e,t,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}(_regeneratorDefine2=function(e,t,n,r){t?o?o(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n:((r=function(t,n){_regeneratorDefine2(e,t,function(e){return this._invoke(t,n,e)})})("next",0),r("throw",1),r("return",2))})(e,t,n,r)}function asyncGeneratorStep(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function _asyncToGenerator(i){return function(){var e=this,c=arguments;return new Promise(function(t,n){var r=i.apply(e,c);function o(e){asyncGeneratorStep(r,t,n,o,a,"next",e)}function a(e){asyncGeneratorStep(r,t,n,o,a,"throw",e)}o(void 0)})}}var burgerBtn=document.querySelector(".hamburger"),navMobile=document.querySelector(".nav-mobile"),allNavItems=document.querySelectorAll(".nav-mobile__link"),navLogo=document.querySelector(".company"),footerYear=document.querySelector(".footer-year"),form=document.querySelector(".section-contact__msg-card-form"),msgStatus=document.querySelector(".msg-status"),policyModal=document.querySelector("#privacyPolicyModal"),policyModalBody=policyModal.querySelector(".pp-modal__content"),PolicyOpenBtn=document.querySelector(".pp-open"),PolicyCloseBtn=policyModal.querySelector(".pp-close"),lastFocusedElement=null;function openPolicyModal(){lastFocusedElement=document.activeElement,policyModal.classList.add("active"),policyModal.removeAttribute("hidden"),document.body.classList.add("modal-open"),policyModalBody.setAttribute("tabindex","-1"),policyModalBody.focus()}function closePolicyModal(){policyModal.classList.remove("active"),policyModal.setAttribute("hidden",""),document.body.classList.remove("modal-open"),lastFocusedElement&&lastFocusedElement.focus()}PolicyOpenBtn.addEventListener("click",openPolicyModal),PolicyCloseBtn.addEventListener("click",closePolicyModal),document.addEventListener("keydown",function(e){"Escape"===e.key&&policyModal.classList.contains("active")&&closePolicyModal()}),form.addEventListener("submit",(()=>{var t=_asyncToGenerator(_regenerator().m(function e(t){var n,r,o;return _regenerator().w(function(e){for(;;)switch(e.n){case 0:return t.preventDefault(),msgStatus.classList.remove("success","error"),msgStatus.textContent="",e.p=1,e.n=2,fetch(form.action,{method:"POST",body:new FormData(form)});case 2:return n=e.v,e.n=3,n.json().catch(function(){return{}});case 3:if(r=e.v,n.ok&&r.ok){e.n=4;break}throw new Error(r.msg||"Wystąpił błąd wysyłania!");case 4:msgStatus.classList.add("success"),msgStatus.textContent=r.msg||"Wiadomość została wysłana!",form.reset(),e.n=6;break;case 5:e.p=5,o=e.v,msgStatus.classList.add("error"),msgStatus.textContent=o.message||"Wystąpił błąd wysyłania!";case 6:return e.a(2)}},e,null,[[1,5]])}));return function(e){return t.apply(this,arguments)}})());var openNav=function(){navMobile.classList.add("nav-mobile--active"),allNavItems.forEach(function(e){return e.classList.add("nav-link-animation")}),burgerBtn.classList.add("hamburger-open")},closeNav=function(){navMobile.classList.remove("nav-mobile--active"),allNavItems.forEach(function(e){return e.classList.remove("nav-link-animation")}),burgerBtn.classList.remove("hamburger-open")},toggleNav=function(){(navMobile.classList.contains("nav-mobile--active")?closeNav:openNav)()},handleCurrentYear=function(){var e=(new Date).getFullYear();footerYear.innerText=e};handleCurrentYear(),burgerBtn.addEventListener("click",toggleNav),navLogo.addEventListener("click",closeNav),allNavItems.forEach(function(e){e.addEventListener("click",closeNav)}),window.addEventListener("scroll",handleObserver);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
